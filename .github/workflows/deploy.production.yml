# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to Production

on:
  push:
    branches: ["release"]

env:
  APP_ENV: ${{ secrets.PRODUCTION }}

jobs:
  build:
    name: "Deploy to Production"
    environment:
      name: production

    runs-on: [self-hosted, production]

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create ENV
        run: |
          rm -r -f .env
          touch .env_temp
          echo $APP_ENV | tee .env_temp
          sed 's/ /\n/g' .env_temp >> .env
          rm -r -f .env_temp
      # Reference from offical Docker youtube channel: https://youtu.be/aNh8iShFXto
      - name: Build Docker and deployment
        run: sudo chmod +x docker-build.sh && sudo ./docker-build.sh

      - name: Prune docker image trash
        run: sudo docker rmi -f $(sudo docker images --filter "dangling=true" -q --no-trunc)
        if: always() # Pick up events even if the job fails or is canceled.

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "C053JVDGG12"
          payload: |
            {
              "text": "PICK-ONE-NAME-*PRODUCTION* ${{ env.STATUS }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/abc-software-solutions-company/lucky-draw-website/actions/runs/${{ github.run_id }}|PICK-ONE-NAME-*PRODUCTION* ${{ env.STATUS }}>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always() # Pick up events even if the job fails or is canceled.
